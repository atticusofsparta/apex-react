{"ast":null,"code":"// document.addEventListener(\"DOMContentLoaded\", function () {\n//     console.log('loaded');\n//     // list out the vars\n//     var mOverlay = getId('modal_window'), mOpen = getId('modal_open'), mClose = getId('modal_close'), modal = getId('modal-holder'), page = getId('page'), modalOpen = false, lastFocus;\n//     // Let's cut down on what we need to type to get an ID\n//     function getId(id) {\n//         return document.getElementById(id);\n//     }\n//     // Let's open the modal\n//     function modalShow() {\n//         lastFocus = document.activeElement;\n//         page.setAttribute('aria-hidden', 'true');\n//         mOverlay.setAttribute('aria-hidden', 'false');\n//         modalOpen = true;\n//         modal.setAttribute('tabindex', '0');\n//         modal.focus();\n//     }\n//     // binds to both the button click and the escape key to close the modal window\n//     // but only if modalOpen is set to true\n//     function modalClose(event) {\n//         if (modalOpen && (!event.keyCode || event.keyCode === 27)) {\n//             mOverlay.setAttribute('aria-hidden', 'true');\n//             page.setAttribute('aria-hidden', 'false');\n//             modal.setAttribute('tabindex', '-1');\n//             modalOpen = false;\n//             lastFocus.focus();\n//         }\n//     }\n//     // Restrict focus to the modal window when it's open.\n//     // Tabbing will just loop through the whole modal.\n//     // Shift + Tab will allow backup to the top of the modal,\n//     // and then stop.\n//     function focusRestrict(event) {\n//         document.addEventListener('focus', function (event) {\n//             if (modalOpen && !modal.contains(event.target)) {\n//                 event.stopPropagation();\n//                 modal.focus();\n//             }\n//         }, true);\n//     }\n//     // Close modal window by clicking on the overlay\n//     mOverlay.addEventListener('click', function (e) {\n//         if (e.target  modal.parentNode) {\n//             modalClose(e);\n//         }\n//     }, false);\n//     // open modal by btn click/hit\n//     mOpen.addEventListener('click', modalShow);\n//     // close modal by btn click/hit\n//     mClose.addEventListener('click', modalClose);\n//     // close modal by keydown, but only if modal is open\n//     document.addEventListener('keydown', modalClose);\n//     // restrict tab focus on elements only inside modal window\n//     window.addEventListener('keypress', focusRestrict);\n// });","map":{"version":3,"names":[],"sources":["/home/dev/Documents/GitHub/apex-react-atticus/src/components/file-upload.js"],"sourcesContent":["\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     console.log('loaded');\n//     // list out the vars\n//     var mOverlay = getId('modal_window'), mOpen = getId('modal_open'), mClose = getId('modal_close'), modal = getId('modal-holder'), page = getId('page'), modalOpen = false, lastFocus;\n\n//     // Let's cut down on what we need to type to get an ID\n//     function getId(id) {\n//         return document.getElementById(id);\n//     }\n\n//     // Let's open the modal\n//     function modalShow() {\n//         lastFocus = document.activeElement;\n//         page.setAttribute('aria-hidden', 'true');\n//         mOverlay.setAttribute('aria-hidden', 'false');\n//         modalOpen = true;\n//         modal.setAttribute('tabindex', '0');\n//         modal.focus();\n//     }\n\n//     // binds to both the button click and the escape key to close the modal window\n//     // but only if modalOpen is set to true\n//     function modalClose(event) {\n//         if (modalOpen && (!event.keyCode || event.keyCode === 27)) {\n//             mOverlay.setAttribute('aria-hidden', 'true');\n//             page.setAttribute('aria-hidden', 'false');\n//             modal.setAttribute('tabindex', '-1');\n//             modalOpen = false;\n//             lastFocus.focus();\n//         }\n//     }\n\n//     // Restrict focus to the modal window when it's open.\n//     // Tabbing will just loop through the whole modal.\n//     // Shift + Tab will allow backup to the top of the modal,\n//     // and then stop.\n//     function focusRestrict(event) {\n//         document.addEventListener('focus', function (event) {\n//             if (modalOpen && !modal.contains(event.target)) {\n//                 event.stopPropagation();\n//                 modal.focus();\n//             }\n//         }, true);\n//     }\n\n\n//     // Close modal window by clicking on the overlay\n//     mOverlay.addEventListener('click', function (e) {\n//         if (e.target  modal.parentNode) {\n//             modalClose(e);\n//         }\n//     }, false);\n\n//     // open modal by btn click/hit\n//     mOpen.addEventListener('click', modalShow);\n\n//     // close modal by btn click/hit\n//     mClose.addEventListener('click', modalClose);\n\n//     // close modal by keydown, but only if modal is open\n//     document.addEventListener('keydown', modalClose);\n\n//     // restrict tab focus on elements only inside modal window\n//     window.addEventListener('keypress', focusRestrict);\n\n\n// });\n"],"mappings":"AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA"},"metadata":{},"sourceType":"module"}